<div id="I_content">
<div class="C_doc">
<div id="I_type">public member function</div>
<div id="I_file">&lt;ios&gt; &lt;iostream&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span><a href="/reference/ios/ios/">ios</a>::fill</h1>
<div class="C_prototype"><table><tr class="odd"><th>get (1)</th><td><pre>char fill() const;</pre></td></tr><tr class="even"><th>set (2)</th><td><pre>char fill (char fillch);</pre></td></tr></table></div><div id="I_description">Get/set fill character</div>
<section id="description">
The first form <i>(1)</i> returns the <i>fill character</i>.<br>
<br>
The second form <i>(2)</i> sets <var>fillch</var> as the new <i>fill character</i> and returns the <i>fill character</i> used before the call.<br>
<br>
The <dfn>fill character</dfn> is the character used by output insertion functions to fill spaces when padding results to the <i>field width</i>.<br>
<br>
The parametric manipulator <samp><a href="/setfill">setfill</a></samp> can also be used to set the <i>fill character</i>.<br>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
<dl>
<dt>fillch</dt>
<dd>the new <i>fill character</i>.<br>
</dd>
</dl>
</section>
<br>
<section id="return">
<h3>Return Value</h3>
The value of the <i>fill character</i> before the call. <br>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br></code></pre></td>
<td class="source"><pre><code><cite>// using the fill character</cite>
<dfn>#include &lt;iostream&gt;     </dfn><cite>// std::cout</cite>

<var>int</var> main () {
  <var>char</var> prev;

  std::cout.width (10);
  std::cout &lt;&lt; 40 &lt;&lt; <kbd>'\n'</kbd>;

  prev = std::cout.fill (<kbd>'x'</kbd>);
  std::cout.width (10);
  std::cout &lt;&lt; 40 &lt;&lt; <kbd>'\n'</kbd>;

  std::cout.fill(prev);

  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Output:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>        40
xxxxxxxx40
</samp></pre></td></tr></table></div>
</section>
<br>
<section id="access">
<h3>Data races</h3>
Accesses <i>(1)</i> or modifies <i>(2)</i> the stream object.<br>
Concurrent access to the same stream object may cause data races.<br>
</section>
<br>
<section id="exceptions">
<h3>Exception safety</h3>
<b>Basic guarantee:</b> if an exception is thrown, the stream is in a valid state.<br>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "/reference/iomanip/setfill/"><b>setfill</b></a></dt><dd>Set fill character <span class="typ">(function)</span></dd></dl><dl class="links"><dt><a href= "/reference/ios/ios_base/width/"><b>ios_base::width</b></a></dt><dd>Get/set field width <span class="typ">(public member function)</span></dd></dl>
<div id="CH_bb"></div></div></div>
