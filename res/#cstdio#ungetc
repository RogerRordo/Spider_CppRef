<div id="I_content">
<div class="C_doc">
<div id="I_type">function</div>
<div id="I_file">&lt;cstdio&gt;</div>
<h1>ungetc</h1>
<div class="C_prototype"><pre>int ungetc ( int character, FILE * stream );</pre></div><div id="I_description">Unget character from stream</div>
<section id="description">
A <i>character</i> is virtually put back into an input <i>stream</i>, decreasing its <i>internal file position</i> as if a previous <a href="/getc">getc</a> operation was undone.<br>
<br>
This <i>character</i> may or may not be the one read from the <i>stream</i> in the preceding input operation. In any case, the next character retrieved from <i>stream</i> is the <i>character</i> passed to this function, independently of the original one.<br>
<br>
Notice though, that this only affects further input operations on that <i>stream</i>, and not the content of the physical file associated with it, which is not modified by any calls to this function.<br>
<br>
Some library implementations may support this function to be called multiple times, making the characters available in the reverse order in which they were <i>put back</i>. Although this behavior has no standard portability guarantees, and further calls may simply fail after any number of calls beyond the first.<br>
<br>
If successful, the function clears the <i>end-of-file indicator</i> of <i>stream</i> (if it was currently set), and decrements its internal <i>file position indicator</i> if it operates in binary mode; In text mode, the <i>position indicator</i> has unspecified value until all characters put back with <tt>ungetc</tt> have been read or discarded.<br>
<br>
A call to <a href="/fseek">fseek</a>, <a href="/fsetpos">fsetpos</a> or <a href="/rewind">rewind</a> on <i>stream</i> will discard any characters previously put back into it with this function.<br>
<br>
If the argument passed for the <i>character</i> parameter is <a href="/EOF">EOF</a>, the operation fails and the input <i>stream</i> remains unchanged.<br>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
<dl>
<dt>character</dt>
<dd>The <tt>int</tt> promotion of the character to be put back.<br>
The value is internally converted to an <tt>unsigned char</tt> when put back.</dd>
<dt>stream</dt>
<dd>Pointer to a <a href="/FILE">FILE</a> object that identifies an input stream.</dd>
</dl>
</section>
<br>
<section id="return">
<h3>Return Value</h3>
On success, the <i>character</i> put back is returned.<br>
If the operation fails, <a href="/EOF">EOF</a> is returned.<br>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br></code></pre></td>
<td class="source"><pre><code><cite>/* ungetc example */</cite>
<dfn>#include &lt;stdio.h&gt;</dfn>

<var>int</var> main ()
{
  FILE * pFile;
  <var>int</var> c;
  <var>char</var> buffer [256];

  pFile = fopen (<kbd>"myfile.txt"</kbd>,<kbd>"rt"</kbd>);
  <var>if</var> (pFile==NULL) perror (<kbd>"Error opening file"</kbd>);
  <var>else</var> <var>while</var> (!feof (pFile)) {
    c=getc (pFile);
    <var>if</var> (c == EOF) <var>break</var>;
    <var>if</var> (c == <kbd>'#'</kbd>) ungetc (<kbd>'@'</kbd>,pFile);
    <var>else</var> ungetc (c,pFile);
    <var>if</var> (fgets (buffer,255,pFile) != NULL)
      fputs (buffer,stdout);
    <var>else</var> <var>break</var>;
  }
  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
This example opens an existing file called <tt>myfile.txt</tt> for reading and prints its lines, but first gets the first character of every line and puts it back into the stream replacing any starting <tt>#</tt> by an <tt>@</tt>.<br>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "/reference/cstdio/getc/"><b>getc</b></a></dt><dd>Get character from stream <span class="typ">(function)</span></dd></dl><dl class="links"><dt><a href= "/reference/cstdio/fgetc/"><b>fgetc</b></a></dt><dd>Get character from stream <span class="typ">(function)</span></dd></dl><dl class="links"><dt><a href= "/reference/cstdio/putc/"><b>putc</b></a></dt><dd>Write character to stream <span class="typ">(function)</span></dd></dl>
<div id="CH_bb"></div></div></div>
