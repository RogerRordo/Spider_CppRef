<div id="I_content">
<div class="C_doc">
<div id="I_type">public member function</div>
<div id="I_file">&lt;ios&gt; &lt;iostream&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span><a href="/reference/ios/ios_base/">ios_base</a>::flags</h1>
<div class="C_prototype"><table><tr class="odd"><th>get (1)</th><td><pre>fmtflags flags() const;</pre></td></tr><tr class="even"><th>set (2)</th><td><pre>fmtflags flags (fmtflags fmtfl);</pre></td></tr></table></div><div id="I_description">Get/set format flags</div>
<section id="description">
The first form <i>(1)</i> returns the format flags currently selected in the stream.<br>
The second form <i>(2)</i> sets new format flags for the stream, returning its former value.<br>
<br>
The <dfn>format flags</dfn> of a stream affect the way data is interpreted in certain input functions and how these are written by certain output functions. See <samp><a href="/ios_base::fmtflags">ios_base::fmtflags</a></samp> for the possible values of this function's argument and the interpretation of its return value.<br>
<br>
The second form of this function sets the value for <strong>all</strong> the format flags of the stream, overwriting the existing values and clearing any flag not explicitly set in the argument. To access individual flags, see members <samp><a href="/ios_base::setf">setf</a></samp> and <samp><a href="/ios_base::unsetf">unsetf</a>.<br>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
<dl>
<dt>fmtfl</dt>
<dd>Format flags to be used by the stream.<br>
<samp><a href="/ios_base::fmtflags">ios_base::fmtflags</a></samp> is a <i>bitmask type</i>.</dd>
</dl>
</section>
<br>
<section id="return">
<h3>Return Value</h3>
The format flags selected in the stream before the call.<br>
<samp><a href="/ios_base::fmtflags">ios_base::fmtflags</a></samp> is a <i>bitmask type</i>.<br>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br></code></pre></td>
<td class="source"><pre><code><cite>// modify flags</cite>
<dfn>#include &lt;iostream&gt;     </dfn><cite>// std::cout, std::ios</cite>

<var>int</var> main () {
  std::cout.flags ( std::ios::right | std::ios::hex | std::ios::showbase );
  std::cout.width (10);
  std::cout &lt;&lt; 100 &lt;&lt; <kbd>'\n'</kbd>;
  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
This simple example sets some format flags for <samp><a href="/cout">cout</a></samp> that affect the insertion operation by printing the value in hexadecimal (<tt>0x64</tt>) padded right as in a field ten spaces long:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>      0x64</samp></pre></td></tr></table></div>
</section>
<br>
<section id="access">
<h3>Data races</h3>
Accesses <i>(1)</i> or modifies <i>(2)</i> the stream object.<br>
Concurrent access to the same stream object may cause data races.<br>
</section>
<br>
<section id="exceptions">
<h3>Exception safety</h3>
<b>Basic guarantee:</b> if an exception is thrown, the stream is in a valid state.<br>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "/reference/ios/ios_base/setf/"><b>ios_base::setf</b></a></dt><dd>Set specific format flags <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/ios/ios_base/unsetf/"><b>ios_base::unsetf</b></a></dt><dd>Clear specific format flags <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/ios/ios_base/fmtflags/"><b>ios_base::fmtflags</b></a></dt><dd>Type for stream format flags <span class="typ">(public member type)</span></dd></dl><dl class="links"><dt><a href= "/reference/iomanip/setiosflags/"><b>setiosflags</b></a></dt><dd>Set format flags <span class="typ">(function)</span></dd></dl>
<div id="CH_bb"></div></div></div>
