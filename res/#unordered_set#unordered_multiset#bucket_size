<div id="I_content">
<div class="C_doc">
<div id="I_type">public member type</div>
<div id="I_file">&lt;unordered_set&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span><a href="/reference/unordered_set/unordered_multiset/">unordered_multiset</a>::bucket_size<span class="C_ico cpp11warning" title="This page describes a feature introduced by the latest revision of the C++ standard (2011). Older compilers may not support it." alt="This page describes a feature introduced by the latest revision of the C++ standard (2011). Older compilers may not support it."></span></h1>
<div class="C_prototype"><pre>size_type bucket_size ( size_type n ) const;</pre></div><div id="I_description">Return bucket size</div>
<section id="description">
Returns the number of elements in bucket <i>n</i>.<br>
<br>
A bucket is a slot in the container's internal hash table to which elements are assigned based on their hash value.<br>
<br>
The number of elements in a bucket influences the time it takes to access a particular element in the bucket. The container automatically increases the number of buckets to keep the <a href="/unordered_multiset::load_factor">load factor</a> (which is the average bucket size) below its <a href="/unordered_multiset::max_load_factor">max_load_factor</a>.<br>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
<dl>
<dt>n</dt>
<dd>Bucket number.<br>
This shall be lower than <a href="/unordered_multiset::bucket_count">bucket_count</a>.<br>
Member type <tt>size_type</tt> is an unsigned integral type.</dd>
</dl>
</section>
<br>
<section id="return">
<h3>Return Value</h3>
The number of elements in bucket <i>n</i>.<br>
<br>
Member type <tt>size_type</tt> is an unsigned integral type.<br>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br></code></pre></td>
<td class="source"><pre><code><cite>// unordered_multiset::bucket_size</cite>
<dfn>#include &lt;iostream&gt;</dfn>
<dfn>#include &lt;string&gt;</dfn>
<dfn>#include &lt;unordered_set&gt;</dfn>

<var>int</var> main ()
{
  std::unordered_multiset&lt;std::string&gt; myums =
  {<kbd>"human"</kbd>,<kbd>"klingon"</kbd>,<kbd>"klingon"</kbd>,<kbd>"vulcan"</kbd>,<kbd>"romulan"</kbd>,<kbd>"cardassian"</kbd>};

  <var>unsigned</var> nbuckets = myums.bucket_count();

  std::cout &lt;&lt; <kbd>"myums has "</kbd> &lt;&lt; nbuckets &lt;&lt; <kbd>" buckets:\n"</kbd>;

  <var>for</var> (<var>unsigned</var> i=0; i&lt;nbuckets; ++i) {
    std::cout &lt;&lt; <kbd>"bucket #"</kbd> &lt;&lt; i &lt;&lt; <kbd>" has "</kbd> &lt;&lt; myums.bucket_size(i) &lt;&lt; <kbd>" elements.\n"</kbd>;
  }

  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Possible output (the actual number of buckets depends on the library implementation):<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>myset has 7 buckets:
bucket #0 has 0 elements.
bucket #1 has 0 elements.
bucket #2 has 0 elements.
bucket #3 has 2 elements.
bucket #4 has 0 elements.
bucket #5 has 4 elements.
bucket #6 has 0 elements.
</samp></pre></td></tr></table></div>
</section>
<br>
<section id="complexity">
<h3>Complexity</h3>
Linear in the bucket size.<br>
</section>
<br>
<section id="validity">
<h3>Iterator validity</h3>
No changes.<br>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "/reference/unordered_set/unordered_multiset/bucket_count/"><b>unordered_multiset::bucket_count</b></a></dt><dd>Return number of buckets <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/unordered_set/unordered_multiset/bucket/"><b>unordered_multiset::bucket</b></a></dt><dd>Locate element's bucket <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/unordered_set/unordered_multiset/size/"><b>unordered_multiset::size</b></a></dt><dd>Return container size <span class="typ">(public member function)</span></dd></dl>
</section>
<div id="CH_bb"></div></div></div>
