<div id="I_content">
<div class="C_doc">
<div id="I_type">public member function</div>
<div id="I_file">&lt;ios&gt; &lt;iostream&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span><a href="/reference/ios/ios_base/">ios_base</a>::unsetf</h1>
<div class="C_prototype"><pre>void unsetf (fmtflags mask);</pre></div><div id="I_description">Clear specific format flags</div>
<section id="description">
Clears the format flags selected in <var>mask</var>.<br>
<br>
The parameterized manipulator <samp><a href="/resetiosflags">resetiosflags</a></samp> behaves in a similar way as this member function.<br>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
<dl>
<dt>mask</dt>
<dd>Bitmask specifying the flags to be cleared. The flags are specified as a combination of flags of the <samp><a href="/ios_base::fmtflags">fmtflags</a></samp> member type.</dd>
</dl>
</section>
<br>
<section id="return">
<h3>Return Value</h3>
none <br>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br></code></pre></td>
<td class="source"><pre><code><cite>// modifying flags with setf/unsetf</cite>
<dfn>#include &lt;iostream&gt;     </dfn><cite>// std::cout, std::ios</cite>

<var>int</var> main () {
  std::cout.setf ( std::ios::hex, std::ios::basefield );  <cite>// set hex as the basefield</cite>
  std::cout.setf ( std::ios::showbase );                  <cite>// activate showbase</cite>
  std::cout &lt;&lt; 100 &lt;&lt; <kbd>'\n'</kbd>;
  std::cout.unsetf ( std::ios::showbase );                <cite>// deactivate showbase</cite>
  std::cout &lt;&lt; 100 &lt;&lt; <kbd>'\n'</kbd>;
  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Output:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>
0x64
64
</samp></pre></td></tr></table></div>
</section>
<br>
<section id="access">
<h3>Data races</h3>
Modifies the stream object.<br>
Concurrent access to the same stream object may cause data races.<br>
</section>
<br>
<section id="exceptions">
<h3>Exception safety</h3>
<b>Basic guarantee:</b> if an exception is thrown, the stream is in a valid state.<br>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "/reference/ios/ios_base/flags/"><b>ios_base::flags</b></a></dt><dd>Get/set format flags <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/ios/ios_base/setf/"><b>ios_base::setf</b></a></dt><dd>Set specific format flags <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/ios/ios_base/fmtflags/"><b>ios_base::fmtflags</b></a></dt><dd>Type for stream format flags <span class="typ">(public member type)</span></dd></dl><dl class="links"><dt><a href= "/reference/iomanip/resetiosflags/"><b>resetiosflags</b></a></dt><dd>Reset format flags <span class="typ">(function)</span></dd></dl>
<div id="CH_bb"></div></div></div>
