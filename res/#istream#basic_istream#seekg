<div id="I_content">
<div class="C_doc">
<div id="I_type">public member function</div>
<div id="I_file">&lt;istream&gt; &lt;iostream&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span><a href="/reference/istream/basic_istream/">basic_istream</a>::seekg</h1>
<div class="C_prototype"><table><tr class="odd"><th>(1)</th><td><pre>basic_istream&amp; seekg (pos_type pos);</pre></td></tr><tr class="even"><th>(2)</th><td><pre>basic_istream&amp; seekg (off_type off, ios_base::seekdir way);</pre></td></tr></table></div><div id="I_description">Set position in input sequence</div>
<section id="description">
Sets the position of the next character to be extracted from the input stream.<br>
<br>
Internally, the function accesses the input sequence by first constructing a <samp><a href="/basic_istream::sentry">sentry</a></samp> object (with <var>noskipws</var> set to <code>true</code>). Then (if <samp><a href="/basic_ios::good">good</a></samp>), it calls either <samp><a href="/basic_streambuf::pubseekpos">pubseekpos</a></samp> <i>(1)</i> or <samp><a href="/basic_streambuf::pubseekoff">pubseekoff</a></samp> <i>(2)</i> on its associated <i><a href="/basic_streambuf">stream buffer</a></i> object (if any). Finally, it destroys the <samp><a href="/basic_istream::sentry">sentry</a></samp> object before returning.<br>
<br>
<div class="C_SwitchCases">
<div title="C++98">
If the <samp><a href="/ios_base::eofbit">eofbit</a></samp> flag is set before the call, the function fails (sets <samp><a href="/ios_base::failbit">failbit</a></samp> and returns).<br>
</div>
<div title="C++11">
The function clears the <samp><a href="/ios_base::eofbit">eofbit</a></samp> flag, if set before the call.<br>
</div>
</div>
<br>
Calling this function does not alter the value returned by <samp><a href="/basic_istream::gcount">gcount</a></samp>.<br>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
<dl>
<dt>pos</dt>
<dd>New absolute position within the stream (relative to the beginning).<br>
Member type <samp>pos_type</samp> is determined by the <i><a href="/char_traits">character traits</a></i>: generally, it is an <samp><a href="/fpos">fpos</a></samp> type (such as <samp><a href="/streampos">streampos</a></samp>) that can be converted to/from integral types.<br>
</dd>
<dt>off</dt>
<dd>Offset value, relative to the <var>way</var> parameter.<br>
Member type <samp>off_type</samp> is determined by the <i><a href="/char_traits">character traits</a></i>: generally, it is an alias of the signed integral type <samp><a href="/streamoff">streamoff</a></samp>.<br>
</dd>
<dt>way</dt>
<dd>Object of type <samp><a href="/ios_base::seekdir">ios_base::seekdir</a></samp>. It may take any of the following constant values: <br>
<table class="boxed"><tr><th>value</th><th>offset is relative to...</th></tr>
<tr><td><samp>ios_base::beg</samp></td><td>beginning of the stream</td></tr>
<tr><td><samp>ios_base::cur</samp></td><td>current position in the stream</td></tr>
<tr><td><samp>ios_base::end</samp></td><td>end of the stream</td></tr>
</table>
</dd>
</dl>
</section>
<br>
<section id="return">
<h3>Return Value</h3>
The <samp><a href="/basic_istream">basic_istream</a></samp> object (<code>*this</code>).<br>
<br>
Errors are signaled by modifying the <i><a href="/basic_ios::rdstate">internal state flags</a></i>:<br>
<table class="boxed">
<tr><th>flag</th><th>error</th></tr>
<tr><td><samp><a href="/ios_base::eofbit">eofbit</a></samp></td><td>-</td></tr>
<tr><td><samp><a href="/ios_base::failbit">failbit</a></samp></td><td>Either the construction of <samp><a href="/basic_istream::sentry">sentry</a></samp> failed, or the internal call to <samp><a href="/basic_streambuf::pubseekpos">pubseekpos</a></samp> <i>(1)</i> or <samp><a href="/basic_streambuf::pubseekoff">pubseekoff</a></samp> <i>(2)</i> failed (i.e., either function returned <code>-1</code>).</td></tr>
<tr><td><samp><a href="/ios_base::badbit">badbit</a></samp></td><td>Another error occurred on the stream (such as when the function catches an exception thrown by an internal operation).<br>
When set, the integrity of the stream may have been affected.</td></tr>
</table>
Multiple flags may be set by a single operation.<br>
<br>
If the operation sets an <i><a href="/basic_ios::rdstate">internal state flag</a></i> that was registered with member <samp><a href="/basic_ios::exceptions">exceptions</a></samp>, the function throws an exception of member type <samp><a href="/ios_base::failure">failure</a></samp>.<br>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br></code></pre></td>
<td class="source"><pre><code><cite>// read a file into memory</cite>
<dfn>#include &lt;iostream&gt;     </dfn><cite>// std::cout</cite>
<dfn>#include &lt;fstream&gt;      </dfn><cite>// std::ifstream</cite>

<var>int</var> main () {
  std::ifstream is (<kbd>"test.txt"</kbd>, std::ifstream::binary);
  <var>if</var> (is) {
    <cite>// get length of file:</cite>
    is.seekg (0, is.end);
    <var>int</var> length = is.tellg();
    is.seekg (0, is.beg);

    <cite>// allocate memory:</cite>
    <var>char</var> * buffer = <var>new</var> <var>char</var> [length];

    <cite>// read data as a block:</cite>
    is.read (buffer,length);

    is.close();

    <cite>// print content:</cite>
    std::cout.write (buffer,length);

    <var>delete</var>[] buffer;
  }

  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
In this example, <samp>seekg</samp> is used to move the position to the end of the file, and then back to the beginning.<br>
</section>
<br>
<section id="access">
<h3>Data races</h3>
Modifies the stream object.<br>
Concurrent access to the same stream object may cause data races.<br>
</section>
<br>
<section id="exceptions">
<h3>Exception safety</h3>
<b>Basic guarantee:</b> if an exception is thrown, the object is in a valid state.<br>
It throws an exception of member type <samp><a href="/ios_base::failure">failure</a></samp> if the resulting <i>error state flag</i> is not <samp><a href="/ios_base::goodbit">goodbit</a></samp> and member <samp><a href="/basic_ios::exceptions">exceptions</a></samp> was set to throw for that state.<br>
Any exception thrown by an internal operation is caught and handled by the function, setting <samp><a href="/ios_base::badbit">badbit</a></samp>. If <samp><a href="/ios_base::badbit">badbit</a></samp> was set on the last call to <samp><a href="/basic_ios::exceptions">exceptions</a></samp>, the function rethrows the caught exception.<br>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "/reference/istream/basic_istream/tellg/"><b>basic_istream::tellg</b></a></dt><dd>Get position in input sequence <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/ostream/basic_ostream/seekp/"><b>basic_ostream::seekp</b></a></dt><dd>Set position in output sequence <span class="typ">(public member function)</span></dd></dl>
<div id="CH_bb"></div></div></div>
