<div id="I_content">
<div class="C_doc">
<div id="I_type">function</div>
<div id="I_file">&lt;cstring&gt;</div>
<h1>strncmp</h1>
<div class="C_prototype"><pre>int strncmp ( const char * str1, const char * str2, size_t num );</pre></div><div id="I_description">Compare characters of two strings</div>
<section id="description">
Compares up to <i>num</i> characters of the C string <i>str1</i> to those of the C string <i>str2</i>.<br>
This function starts comparing the first character of each string. If they are equal to each other, it continues with the following pairs until the characters differ, until a terminating null-character is reached, or until <i>num</i> characters match in both strings, whichever happens first.<br>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
<dl>
<dt>str1</dt>
<dd>C string to be compared.</dd>
<dt>str2</dt>
<dd>C string to be compared.</dd>
<dt>num</dt>
<dd>Maximum number of characters to compare.<br>
<a href="/cstring:size_t">size_t</a> is an unsigned integral type.</dd>
</dl>
</section>
<br>
<section id="return">
<h3>Return Value</h3>
Returns an integral value indicating the relationship between the strings:<br>
<table class="boxed">
<tr><th>return value</th><th>indicates</th></tr>
<tr><td><code>&lt;0</code></td><td>the first character that does not match has a lower value in <i>str1</i> than in <i>str2</i></td></tr>
<tr><td><code>0</code></td><td>the contents of both strings are equal</td></tr>
<tr><td><code>&gt;0</code></td><td>the first character that does not match has a greater value in <i>str1</i> than in <i>str2</i></td></tr>
</table>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br></code></pre></td>
<td class="source"><pre><code><cite>/* strncmp example */</cite>
<dfn>#include &lt;stdio.h&gt;</dfn>
<dfn>#include &lt;string.h&gt;</dfn>

<var>int</var> main ()
{
  <var>char</var> str[][5] = { <kbd>"R2D2"</kbd> , <kbd>"C3PO"</kbd> , <kbd>"R2A6"</kbd> };
  <var>int</var> n;
  puts (<kbd>"Looking for R2 astromech droids..."</kbd>);
  <var>for</var> (n=0 ; n&lt;3 ; n++)
    <var>if</var> (strncmp (str[n],<kbd>"R2xx"</kbd>,2) == 0)
    {
      printf (<kbd>"found %s\n"</kbd>,str[n]);
    }
  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Output:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>
Looking for R2 astromech droids...
found R2D2
found R2A6
</samp></pre></td></tr></table></div>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "/reference/cstring/strcmp/"><b>strcmp</b></a></dt><dd>Compare two strings <span class="typ">(function)</span></dd></dl><dl class="links"><dt><a href= "/reference/cstring/memcmp/"><b>memcmp</b></a></dt><dd>Compare two blocks of memory <span class="typ">(function)</span></dd></dl><dl class="links"><dt><a href= "/reference/cstring/strrchr/"><b>strrchr</b></a></dt><dd>Locate last occurrence of character in string <span class="typ">(function)</span></dd></dl><dl class="links"><dt><a href= "/reference/cstring/strspn/"><b>strspn</b></a></dt><dd>Get span of character set in string <span class="typ">(function)</span></dd></dl>
<div id="CH_bb"></div></div></div>
