<div id="I_content">
<div class="C_doc">
<div id="I_type">enum class</div>
<div id="I_file">&lt;ios&gt; &lt;iostream&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span>io_errc<span class="C_ico cpp11warning" title="This page describes a feature introduced by the latest revision of the C++ standard (2011). Older compilers may not support it." alt="This page describes a feature introduced by the latest revision of the C++ standard (2011). Older compilers may not support it."></span></h1>
<div class="C_prototype"><pre>enum class io_errc;</pre></div><div id="I_description">Input/output error conditions</div>
<section id="description">
This <code>enum class</code> type defines the <i><a href="/error_condition">error conditions</a></i> of the <i><a href="/iostream_category">iostream category</a></i>.<br>
<br>
The enum includes at least the following label:<br>
<table class="boxed">
<tr><th><samp>io_errc</samp> label</th><th>value</th><th>description</th></tr>
<tr><td><samp>stream</samp></td><td><code>1</code></td><td>Error in stream</td></tr>
</table>
<br>
All library implementations define at least this value (<samp>stream</samp>, with a value of <code>1</code>), but may provide additional values, especially if they require to produce additional <i><a href="/error_code">error codes</a></i> for the <i><a href="/iostream_category">iostream category</a></i>.<br>
<br>
Values of the enum type <samp>io_errc</samp> may be used to create <samp><a href="/error_condition">error_condition</a></samp> objects to be compared against the value returned by the <samp><a href="/system_error::code">code</a></samp> member of <samp><a href="/ios_base::failure">ios_base::failure</a></samp>.<br>
<br>
Although notice that exceptions of type <samp><a href="/ios_base::failure">ios_base::failure</a></samp> may also carry error codes from other categories (such as from the <samp><a href="/system_category">system_category</a></samp>).<br>
</section>
<br>
<section id="functions">
<h3>Non-member function overloads</h3>
<dl class="links"><dt><a href= "/reference/ios/io_errc/make_error_code/"><b>make_error_code (io_errc)</b></a></dt><dd>Make error code <span class="typ">(function)</span></dd></dl><dl class="links"><dt><a href= "/reference/ios/io_errc/make_error_condition/"><b>make_error_condition (io_errc)</b></a></dt><dd>Make error condition <span class="typ">(function)</span></dd></dl>
</section>
<br>
<section id="specializations">
<h3>Non-member class specializations</h3>
<dl class="links"><dt><a href= "/reference/ios/io_errc/is_error_code_enum/"><b>is_error_code_enum (io_errc)</b></a></dt><dd>error_code enum flag for io_errc <span class="typ">(class)</span></dd></dl>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br></code></pre></td>
<td class="source"><pre><code><cite>// io_errc example</cite>
<dfn>#include &lt;iostream&gt;     </dfn><cite>// std::cin, std::cerr, std::ios,</cite>
                        <cite>// std::make_error_condition, std::ios_errc</cite>
<var>int</var> main () {
  std::cin.exceptions (std::ios::failbit|std::ios::badbit);
  <var>try</var> {
    std::cin.rdbuf(<var>nullptr</var>);    <cite>// throws</cite>
  } <var>catch</var> (std::ios::failure&amp; e) {
    std::cerr &lt;&lt; <kbd>"failure caught: "</kbd>;
    <var>if</var> ( e.code() == std::make_error_condition(std::io_errc::stream) )
      std::cerr &lt;&lt; <kbd>"stream error condition\n"</kbd>; 
    <var>else</var>
      std::cerr &lt;&lt; <kbd>"some other error condition\n"</kbd>;
  }

  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Possible output:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>
failure caught: stream error condition
</samp></pre></td></tr></table></div>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "/reference/system_error/errc/"><b>errc</b></a></dt><dd>Generic error conditions <span class="typ">(enum class)</span></dd></dl><dl class="links"><dt><a href= "/reference/ios/iostream_category/"><b>iostream_category</b></a></dt><dd>Return iostream category <span class="typ">(function)</span></dd></dl><dl class="links"><dt><a href= "/reference/ios/io_errc/make_error_code/"><b>make_error_code (io_errc)</b></a></dt><dd>Make error code <span class="typ">(function)</span></dd></dl><dl class="links"><dt><a href= "/reference/ios/io_errc/make_error_condition/"><b>make_error_condition (io_errc)</b></a></dt><dd>Make error condition <span class="typ">(function)</span></dd></dl>
<div id="CH_bb"></div></div></div>
