<div id="I_content">
<div class="C_doc">
<div id="I_type">macro/function</div>
<div id="I_file">&lt;cmath&gt; &lt;ctgmath&gt;</div>
<h1>fpclassify<span class="C_ico cpp11warning" title="This page describes a feature introduced by the latest revision of the C++ standard (2011). Older compilers may not support it." alt="This page describes a feature introduced by the latest revision of the C++ standard (2011). Older compilers may not support it."></span></h1>
<div class="C_prototype"><div class="C_SwitchCases">
<div title="C99">
<table><tr class="odd"><th>macro</th><td><pre>fpclassify(x)</pre></td></tr></table></div>
<div title="C++11" class="on">
<table><tr class="even"><th>function</th><td><pre>int fpclassify (float x);int fpclassify (double x);int fpclassify (long double x);</pre></td></tr></table></div>
</div>
</div><div id="I_description">Classify floating-point value</div>
<section id="description">
Returns a value of type <code>int</code> that matches one of the <i>classification macro constants</i>, depending on the value of <var>x</var>:<br>
<br>
<table class="boxed">
<tr><th>value</th><th>description</th></tr>
<tr><td><samp>FP_INFINITE</samp></td><td>Positive or negative infinity (overflow)</td></tr>
<tr><td><samp>FP_NAN</samp></td><td>Not-A-Number</td></tr>
<tr><td><samp>FP_ZERO</samp></td><td>Value of zero</td></tr>
<tr><td><samp>FP_SUBNORMAL</samp></td><td>Sub-normal value (underflow)</td></tr>
<tr><td><samp>FP_NORMAL</samp></td><td>Normal value (none of the above)</td></tr>
</table>
Note that each value pertains to a single category: zero is not a normal value.<br>
<br>
These macro constants of type <code>int</code> are defined in header <samp><a href="/&lt;cmath&gt;">&lt;cmath&gt;</a></samp> (<samp><a href="/cmath">&lt;math.h&gt;</a></samp>).<br>
<br>
<div class="C_SwitchCases">
<div title="C99">
In C, this is implemented as a macro, but the type of <var>x</var> shall be <code>float</code>, <code>double</code> or <code>long double</code>.<br>
</div>
<div title="C++11">
In C++, it is implemented with function overloads for each <i><a href="/is_floating_point">floating-point type</a></i>.<br>
</div>
</div>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
<dl>
<dt>x</dt>
The value to classify.<br>
</dl>
</section>
<br>
<section id="return">
<h3>Return value</h3>
One of the followoing <code>int</code> values: <samp>FP_INFINITE</samp>, <samp>FP_NAN</samp>, <samp>FP_ZERO</samp>, <samp>FP_SUBNORMAL</samp> or <samp>FP_NORMAL</samp>.<br>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br></code></pre></td>
<td class="source"><pre><code><cite>/* fpclassify example */</cite>
<dfn>#include &lt;stdio.h&gt;      </dfn><cite>/* printf */</cite><dfn></dfn>
<dfn>#include &lt;math.h&gt;       </dfn><cite>/* fpclassify, signbit, FP_* */</cite><dfn></dfn>

<var>int</var> main()
{
  <var>double</var> d = 1.0 / 0.0;
  <var>switch</var> (fpclassify(d)) {
    <var>case</var> FP_INFINITE:  printf (<kbd>"infinite"</kbd>);  <var>break</var>;
    <var>case</var> FP_NAN:       printf (<kbd>"NaN"</kbd>);       <var>break</var>;
    <var>case</var> FP_ZERO:      printf (<kbd>"zero"</kbd>);      <var>break</var>;
    <var>case</var> FP_SUBNORMAL: printf (<kbd>"subnormal"</kbd>); <var>break</var>;
    <var>case</var> FP_NORMAL:    printf (<kbd>"normal"</kbd>);    <var>break</var>;
  }
  <var>if</var> (signbit(d)) printf (<kbd>" negative\n"</kbd>);
  <var>else</var> printf (<kbd>" positive or unsigned\n"</kbd>);
  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Output:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>
infinite positive or unsigned
</samp></pre></td></tr></table></div>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "/reference/cmath/isfinite/"><b>isfinite</b></a></dt><dd>Is finite value <span class="typ">(macro)</span></dd></dl><dl class="links"><dt><a href= "/reference/cmath/isnan/"><b>isnan</b></a></dt><dd>Is Not-A-Number <span class="typ">(macro/function)</span></dd></dl><dl class="links"><dt><a href= "/reference/cmath/isnormal/"><b>isnormal</b></a></dt><dd>Is normal <span class="typ">(macro/function)</span></dd></dl><dl class="links"><dt><a href= "/reference/cmath/signbit/"><b>signbit</b></a></dt><dd>Sign bit <span class="typ">(macro/function)</span></dd></dl>
<div id="CH_bb"></div></div></div>
