<div id="I_content">
<div class="C_doc">
<div id="I_type">function</div>
<div id="I_file">&lt;cmath&gt; &lt;ctgmath&gt;</div>
<h1>atan2</h1>
<div class="C_prototype"><div class="C_SwitchCases">
<div title="C90">
<pre>double atan2(double y, double x);</pre></div>
<div title="C99" class="on">
<pre>     double atan2  (double y     , double x);      float atan2f (float y      , float x);long double atan2l (long double y, long double x);</pre></div>
<div title="C++98" class="on">
<pre>     double atan2 (double y     , double x);      float atan2 (float y      , float x);long double atan2 (long double y, long double x);</pre></div>
<div title="C++11" class="on">
<pre>     double atan2 (double y     , double x);      float atan2 (float y      , float x);long double atan2 (long double y, long double x);     double atan2 (Type1 y      , Type2 x);       // additional overloads</pre></div>
</div>
</div><div id="I_description">Compute arc tangent with two parameters</div>
<section id="description">
Returns the principal value of the arc tangent of <code>y/x</code>, expressed in radians.<br>
<br>
To compute the value, the function takes into account the sign of both arguments in order to determine the quadrant.<br>
<br>
In C++, this function is overloaded in <code><a href="/&lt;valarray&gt;">&lt;valarray&gt;</a></code> (see <a href="/valarray:atan2">valarray atan2</a>).<br>
<br>
<div class="C_SwitchCases">
<div title="C99">
Header <samp><a href="/&lt;ctgmath&gt;">&lt;tgmath.h&gt;</a></samp> provides a type-generic macro version of this function.<br>
</div>
<div title="C++98">
This function is overloaded in <code><a href="/&lt;valarray&gt;">&lt;valarray&gt;</a></code> (see <a href="/valarray:atan2">valarray atan2</a>).<br>
</div>
<div title="C++11">
<i>Additional overloads</i> are provided in this header (<code><a href="/&lt;cmath&gt;">&lt;cmath&gt;</a></code>) for other combinations of <a href="/is_arithmetic">arithmetic types</a> (<samp>Type1</samp> and <samp>Type2</samp>): These overloads effectively cast its arguments to <code>double</code> before calculations, except if at least one of the arguments is of type <code>long double</code> (in which case both are casted to <code>long double</code> instead).<br>
<br>
This function is also overloaded in <code><a href="/&lt;valarray&gt;">&lt;valarray&gt;</a></code> (see <a href="/valarray:atan2">valarray atan2</a>).<br>
</div>
</div>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
<dl>
<dt>y</dt>
<dd>Value representing the proportion of the y-coordinate.</dd>
<dt>x</dt>
<dd>Value representing the proportion of the x-coordinate.</dd>
</dl>
If both arguments passed are zero, a <i>domain error</i> occurs.<br>
</section>
<br>
<section id="return">
<h3>Return Value</h3>
Principal arc tangent of <var>y</var>/<var>x</var>, in the interval [-pi,+pi] radians.<br>
One <i>radian</i> is equivalent to <code>180/PI</code> <i>degrees</i>.<br>
<br>
<div class="C_SwitchCases">
<div title="C90 (C++98)">
If a <i>domain error</i> occurs, the global variable <samp><a href="/errno">errno</a></samp> is set to <samp><a href="/EDOM">EDOM</a></samp>.<br>
</div>
<div title="C99 (C++11)">
If a <i>domain error</i> occurs:<br>
- And <samp><a href="/math_errhandling">math_errhandling</a></samp> has <samp><a href="/MATH_ERRNO">MATH_ERRNO</a></samp> set: the global variable <samp><a href="/errno">errno</a></samp> is set to <samp><a href="/EDOM">EDOM</a></samp>.<br>
- And <samp><a href="/math_errhandling">math_errhandling</a></samp> has <samp><a href="/MATH_ERREXCEPT">MATH_ERREXCEPT</a></samp> set: <samp><a href="/FE_INVALID">FE_INVALID</a></samp> is raised.<br>
</div>
</div>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br></code></pre></td>
<td class="source"><pre><code><cite>/* atan2 example */</cite>
<dfn>#include &lt;stdio.h&gt;      </dfn><cite>/* printf */</cite><dfn></dfn>
<dfn>#include &lt;math.h&gt;       </dfn><cite>/* atan2 */</cite><dfn></dfn>

<dfn>#define PI 3.14159265</dfn>

<var>int</var> main ()
{
  <var>double</var> x, y, result;
  x = -10.0;
  y = 10.0;
  result = atan2 (y,x) * 180 / PI;
  printf (<kbd>"The arc tangent for (x=%f, y=%f) is %f degrees\n"</kbd>, x, y, result );
  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Output:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>
The arc tangent for (x=-10.000000, y=10.000000) is 135.000000 degrees.
</samp></pre></td></tr></table></div>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "/reference/cmath/atan/"><b>atan</b></a></dt><dd>Compute arc tangent <span class="typ">(function)</span></dd></dl><dl class="links"><dt><a href= "/reference/cmath/tan/"><b>tan</b></a></dt><dd>Compute tangent <span class="typ">(function)</span></dd></dl><dl class="links"><dt><a href= "/reference/cmath/sin/"><b>sin</b></a></dt><dd>Compute sine <span class="typ">(function)</span></dd></dl><dl class="links"><dt><a href= "/reference/cmath/cos/"><b>cos</b></a></dt><dd>Compute cosine <span class="typ">(function)</span></dd></dl>
<div id="CH_bb"></div></div></div>
