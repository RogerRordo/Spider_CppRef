<div id="I_content">
<div class="C_doc">
<div id="I_type">public member function</div>
<div id="I_file">&lt;set&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span><a href="/reference/set/set/">set</a>::size</h1>
<div class="C_prototype"><div class="C_SwitchCases">
<div title="C++98">
<pre>size_type size() const;</pre></div>
<div title="C++11" class="on">
<pre>size_type size() const noexcept;</pre></div>
</div>
</div><div id="I_description">Return container size</div>
<section id="description">
Returns the number of elements in the <a href="/set">set</a> container.<br>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
none<br>
</section>
<br>
<section id="return">
<h3>Return Value</h3>
The number of elements in the container.<br>
<br>
Member type <tt>size_type</tt> is an unsigned integral type.<br>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br></code></pre></td>
<td class="source"><pre><code><cite>// set::size</cite>
<dfn>#include &lt;iostream&gt;</dfn>
<dfn>#include &lt;set&gt;</dfn>

<var>int</var> main ()
{
  std::set&lt;<var>int</var>&gt; myints;
  std::cout &lt;&lt; <kbd>"0. size: "</kbd> &lt;&lt; myints.size() &lt;&lt; <kbd>'\n'</kbd>;

  <var>for</var> (<var>int</var> i=0; i&lt;10; ++i) myints.insert(i);
  std::cout &lt;&lt; <kbd>"1. size: "</kbd> &lt;&lt; myints.size() &lt;&lt; <kbd>'\n'</kbd>;

  myints.insert (100);
  std::cout &lt;&lt; <kbd>"2. size: "</kbd> &lt;&lt; myints.size() &lt;&lt; <kbd>'\n'</kbd>;

  myints.erase(5);
  std::cout &lt;&lt; <kbd>"3. size: "</kbd> &lt;&lt; myints.size() &lt;&lt; <kbd>'\n'</kbd>;

  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Output:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>0. size: 0
1. size: 10
2. size: 11
3. size: 10
</samp></pre></td></tr></table></div>
</section>
<br>
<section id="complexity">
<h3>Complexity</h3>
Constant.<br>
</section>
<br>
<section id="validity">
<h3>Iterator validity</h3>
No changes.<br>
</section>
<br>
<section id="access">
<h3>Data races</h3>
The container is accessed.<br>
Concurrently accessing the elements of a <a href="/set">set</a> is safe.<br>
</section>
<br>
<section id="exceptions">
<h3>Exception safety</h3>
<b>No-throw guarantee:</b> this member function never throws exceptions.<br>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "/reference/set/set/max_size/"><b>set::max_size</b></a></dt><dd>Return maximum size <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/set/set/empty/"><b>set::empty</b></a></dt><dd>Test whether container is empty <span class="typ">(public member function)</span></dd></dl>
<div id="CH_bb"></div></div></div>
