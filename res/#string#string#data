<div id="I_content">
<div class="C_doc">
<div id="I_type">public member function</div>
<div id="I_file">&lt;string&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span><a href="/reference/string/string/">string</a>::data</h1>
<div class="C_prototype"><div class="C_SwitchCases">
<div title="C++98">
<pre>const char* data() const;</pre></div>
<div title="C++11" class="on">
<pre>const char* data() const noexcept;</pre></div>
</div>
</div><div id="I_description">Get string data</div>
<section id="description">
<div class="C_SwitchCases">
<div title="C++98">
Returns a pointer to an array that contains the same sequence of characters as the characters that make up the value of the <a href="/string">string</a> object.<br>
<br>
Accessing the value at <tt>data()+size()</tt> produces <i>undefined behavior</i>: There are no guarantees that a null character terminates the character sequence pointed by the value returned by this function. See <a href="/string::c_str">string::c_str</a> for a function that provides such guarantee.<br>
<br>
A program shall not alter any of the characters in this sequence.<br>
</div>
<div title="C++11">
Returns a pointer to an array that contains a null-terminated sequence of characters (i.e., a C-string) representing the current value of the <a href="/string">string</a> object.<br>
<br>
This array includes the same sequence of characters that make up the value of the <a href="/string">string</a> object plus an additional terminating null-character (<tt>'\0'</tt>) at the end.<br>
<br>
The pointer returned points to the internal array currently used by the <a href="/string">string</a> object to store the characters that conform its value.<br>
<br>
Both <tt>string::data</tt> and <a href="/string::c_str">string::c_str</a> are synonyms and return the same value.<br>
</div>
</div>
<br>
The pointer returned may be invalidated by further calls to other member functions that modify the object.<br>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
none<br>
</section>
<br>
<section id="return">
<h3>Return Value</h3>
A pointer to the c-string representation of the <a href="/string">string</a> object's value.<br>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br></code></pre></td>
<td class="source"><pre><code><cite>// string::data</cite>
<dfn>#include &lt;iostream&gt;</dfn>
<dfn>#include &lt;string&gt;</dfn>
<dfn>#include &lt;cstring&gt;</dfn>

<var>int</var> main ()
{
  <var>int</var> length;

  std::string str = <kbd>"Test string"</kbd>;
  <var>char</var>* cstr = <kbd>"Test string"</kbd>;

  <var>if</var> ( str.length() == std::strlen(cstr) )
  {
    std::cout &lt;&lt; <kbd>"str and cstr have the same length.\n"</kbd>;

    <var>if</var> ( memcmp (cstr, str.data(), str.length() ) == 0 )
      std::cout &lt;&lt; <kbd>"str and cstr have the same content.\n"</kbd>;
  }
  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Output:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>str and cstr have the same length.
str and cstr have the same content.
</samp></pre></td></tr></table></div>
</section>
<br>
<div class="C_SwitchCases">
<div title="C++98">
<section id="unspecified">
<h3>Complexity, iterator, access, exceptions</h3>
Unspecified or contradictory specifications.<br>
</div>
<div title="C++11">
<section id="complexity">
<h3>Complexity</h3>
Constant.<br>
</section>
<br>
<section id="validity">
<h3>Iterator validity</h3>
No changes.<br>
</section>
<br>
<section id="access">
<h3>Data races</h3>
The object is accessed.<br>
</section>
<br>
<section id="exceptions">
<h3>Exception safety</h3>
<b>No-throw guarantee:</b> this member function never throws exceptions.<br>
</section>
</div>
</div>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "/reference/string/string/c_str/"><b>string::c_str</b></a></dt><dd>Get C string equivalent <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/string/string/copy/"><b>string::copy</b></a></dt><dd>Copy sequence of characters from string <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/string/string/operator[]/"><b>string::operator[]</b></a></dt><dd>Get character of string <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/string/string/front/"><b>string::front</b></a></dt><dd>Access first character <span class="typ">(public member function)</span></dd></dl>
<div id="CH_bb"></div></div></div>
