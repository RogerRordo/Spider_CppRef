<div id="I_content">
<div class="C_doc">
<div id="I_type"> public static member function</div>
<div id="I_file">&lt;string&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span><a href="/reference/string/char_traits/">char_traits</a>::assign</h1>
<div class="C_prototype"><div class="C_SwitchCases">
<div title="C++98">
<table><tr class="odd"><th>character (1)</th><td><pre>static void      assign (char_type&amp; r, const char_type&amp; c);</pre></td></tr><tr class="even"><th>array (2)</th><td><pre>static char_type assign (char_type* p, site_t n, char_type c);</pre></td></tr></table></div>
<div title="C++11" class="on">
<table><tr class="odd"><th>character (1)</th><td><pre>static void      assign (char_type&amp; r, const char_type&amp; c) noexcept;</pre></td></tr><tr class="even"><th>array (2)</th><td><pre>static char_type assign (char_type* p, site_t n, char_type c);</pre></td></tr></table></div>
</div>
</div><div id="I_description">Assign character</div>
<section id="description">
Assigns <i>c</i> to a character (<i>r</i>) or to an array of characters (<i>s</i>).<br>
<br>
<dl>
<dt>(1) character</dt>
<dd>Assigns <i>c</i> to <i>r</i>, as if using <tt>r=c</tt>.</dd>
<dt>(2) array</dt>
<dd>Assigns <i>c</i> to the first <i>n</i> characters in the array pointed by <i>s</i>, each as if using <tt>operator=</tt>.</dd>
</dl>
<br>
<div class="tip">
In the standard specializations of <a href="/char_traits">char_traits</a>, this function behaves as the built-in <tt>operator=</tt>, but custom <i>character traits</i> classes may provide an alternative behavior whenever this is consistent with the assignment operation of its character type.<br>
</div>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
<dl>
<dt>r</dt>
<dd>An lvalue reference to character.</dd>
<dt>c</dt>
<dd>A character value.</dd>
<dt>p</dt>
<dd>A pointer to the array where the characters will be written.</dd>
<dt>n</dt>
<dd>Number of characters to fill with a value of <i>c</i>.</dd>
</dl>
<br>
Member type <tt>char_type</tt> is the <i>character type</i> (i.e., the class template parameter in <a href="/char_traits">char_traits</a>).<br>
<a href="/size_t">size_t</a> is an unsigned integral type.<br>
</section>
<br>
<section id="return">
<h3>Return Value</h3>
none<br>
</section>
<br>
<section id="complexity">
<h3>Complexity</h3>
Constant.<br>
</section>
<br>
<section id="exceptions">
<h3>Exception safety</h3>
Unless <i>s</i> does not point to an array long enough, this member function never throws exceptions (no-throw guarantee) in any of the standard specializations.<br>
Otherwise, it causes <i>undefined behavior</i>.<br>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "/reference/string/char_traits/eq/"><b>char_traits::eq</b></a></dt><dd>Compare characters for equality <span class="typ">( public static member function)</span></dd></dl>
<div id="CH_bb"></div></div></div>
