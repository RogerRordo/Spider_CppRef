<div id="I_content">
<div class="C_doc">
<div id="I_type">public member function</div>
<div id="I_file">&lt;ios&gt; &lt;iostream&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span><a href="/reference/ios/ios_base/">ios_base</a>::ios_base</h1>
<div class="C_prototype"><div class="C_SwitchCases">
<div title="C++98">
<pre>protected: ios_base();  private: ios_base (const ios_base&amp;);</pre></div>
<div title="C++11" class="on">
<pre>protected: ios_base();ios_base (const ios_base&amp;) = delete;</pre></div>
</div>
</div><div id="I_description">Construct object</div>
<section id="description">
<samp>ios_base</samp> objects have indeterminate values on construction. Each <samp>ios_base</samp> base object shall be initialized by calling <samp><a href="/basic_ios::init">basic_ios::init</a></samp>.<br>
<br>
The class is meant to be a base class, and thus has no public constructors, preventing objects of this class to be constructed -- only objects of derived classes can be constructed.<br>
<br>
<div class="C_SwitchCases">
<div title="C++98">
<samp>ios_base</samp> also declares a copy assignment member function. Like the copy constructor, this function is also <code>private</code>:<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br></code></pre></td>
<td class="source"><pre><code><var>private</var>:
  ios_base (<var>const</var> ios_base&amp;);
  ios_base&amp; <var>operator</var>= (<var>const</var> ios_base&amp;);</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
</div>
<div title="C++11">
<samp>ios_base</samp> also deletes its copy assignment member function. Like the copy constructor, this function is also deleted:<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br></code></pre></td>
<td class="source"><pre><code>  ios_base (<var>const</var> ios_base&amp;) = <var>delete</var>;
  ios_base&amp; <var>operator</var>= (<var>const</var> ios_base&amp;) = <var>delete</var>;</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
</div>
</div>
</section>
<br>
<section id="exceptions">
<h3>Exception safety</h3>
<b>Strong guarantee:</b> if an exception is thrown, there are no side effects.<br>
<div id="CH_bb"></div></div></div>
