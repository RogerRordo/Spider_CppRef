<div id="I_content">
<div class="C_doc">
<div id="I_type">function</div>
<div id="I_file">&lt;cstdlib&gt;</div>
<h1>quick_exit<span class="C_ico cpp11warning" title="This page describes a feature introduced by the latest revision of the C++ standard (2011). Older compilers may not support it." alt="This page describes a feature introduced by the latest revision of the C++ standard (2011). Older compilers may not support it."></span></h1>
<div class="C_prototype"><div class="C_SwitchCases">
<div title="C11">
<pre>_Noreturn void quick_exit (int status);</pre></div>
<div title="C++11" class="on">
<pre>[[noreturn]] void quick_exit (int status) noexcept;</pre></div>
</div>
</div><div id="I_description">Terminate calling process quick</div>
<section id="description">
Terminates the process normally by returning control to the host environment after calling all functions registered using <samp><a href="/at_quick_exit">at_quick_exit</a></samp>.<br>
<br>
No additional cleanup tasks are performed: No object destructors are called. Although whether C streams are closed and/or flushed, and files open with <samp><a href="/tmpfile">tmpfile</a></samp> are removed depends on the particular system or library implementation.<br>
<br>
If <var>status</var> is zero or <samp><a href="/EXIT_SUCCESS">EXIT_SUCCESS</a></samp>, a <i>successful termination</i> status is returned to the host environment.<br>
If <var>status</var> is <samp><a href="/EXIT_FAILURE">EXIT_FAILURE</a></samp>, an <i>unsuccessful termination</i> status is returned to the host environment.<br>
Otherwise, the status returned depends on the system and library implementation.<br>
<br>
If a program calls both <samp><a href="/exit">exit</a></samp> and <samp>quick_exit</samp>, or <samp>quick_exit</samp> more than once, it causes <i>undefined behavior</i>.<br>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
<dl>
<dt>status</dt>
<dd>Status code.<br>
If this is <code>0</code> or <samp><a href="/EXIT_SUCCESS">EXIT_SUCCESS</a></samp>, it indicates success.<br>
If it is <samp><a href="/EXIT_FAILURE">EXIT_FAILURE</a></samp>, it indicates failure.</dd>
</dl>
</section>
<br>
<section id="return">
<h3>Return Value</h3>
none (the function never returns).<br>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br></code></pre></td>
<td class="source"><pre><code><cite>/* quick_exit example */</cite>
<dfn>#include &lt;stdio.h&gt;      </dfn><cite>/* puts */</cite><dfn></dfn>
<dfn>#include &lt;stdlib.h&gt;     </dfn><cite>/* at_quick_exit, quick_exit, EXIT_SUCCESS */</cite><dfn></dfn>

<var>void</var> fnQExit (<var>void</var>)
{
  puts (<kbd>"Quick exit function."</kbd>);
}

<var>int</var> main ()
{
  at_quick_exit (fnQExit);
  puts (<kbd>"Main function: Beginning"</kbd>);
  quick_exit (EXIT_SUCCESS);
  puts (<kbd>"Main function: End"</kbd>);  <cite>// never executed</cite>
  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Output:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>Main function: Beginning
Quick exit function.
</samp></pre></td></tr></table></div>
</section>
<br>
<section id="access">
<h3>Data races</h3>
Concurrently calling this function multiple times has no effect.<br>
Calls to <samp><a href="/at_quick_exit">at_quick_exit</a></samp> that do not complete before the call to this function may not succeed  (depends on particular library implementation).<br>
</section>
<br>
<section id="exceptions">
<h3>Exceptions (C++)</h3>
<b>No-throw guarantee:</b> this function never throws exceptions.<br>
<br>
If any of the functions registered with <samp><a href="/at_quick_exit">at_quick_exit</a></samp> throws an exception, <samp><a href="/terminate">terminate</a></samp> is automatically called.<br>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "/reference/cstdlib/at_quick_exit/"><b>at_quick_exit</b></a></dt><dd>Set function to be executed on quick exit <span class="typ">(function)</span></dd></dl><dl class="links"><dt><a href= "/reference/cstdlib/exit/"><b>exit</b></a></dt><dd>Terminate calling process <span class="typ">(function)</span></dd></dl><dl class="links"><dt><a href= "/reference/cstdlib/abort/"><b>abort</b></a></dt><dd>Abort current process <span class="typ">(function)</span></dd></dl>
<div id="CH_bb"></div></div></div>
